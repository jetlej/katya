// Basics

.line-through{
	display: flex;
	flex-direction: row;
	justify-content: center;
	text-align: center;
	line-height: 100%;

	&:before, &:after {
		background-color: black;
		content: '\a0';
		flex-grow: 1;
		height: 2px;
		position: relative;
		top: 0.5em;
	}
	&:before {
		margin-right:25px;
	}
	&:after {
		margin-left:25px;
	}
}

.no-scroll{
	overflow: hidden;
}

.cover-bg{
	-webkit-background-size: cover;
	-moz-background-size: cover;
	-o-background-size: cover;
	background-size: cover;
	background-position: center;
	background-repeat: none;
}

.icon + span{
	vertical-align: middle;
	display: inline-block;
	line-height: 100%;
	margin-left: 2px;
}

.btn .icon  + span{
	vertical-align: baseline;
}

.pull-right {
	float: right !important;
}

.pull-left {
	float: left !important;
}

.center{
	text-align:center !important;
}

.is-align-left {
	text-align: left;
}

.is-align-center {
	text-align: center;
}

.is-align-right {
	text-align: right;
}

.no-border{
	border:none !important;
}

.no-margin{
	margin:0 !important;
}

.margin-sm{margin: 0 0 ($line-height-computed / 4) !important;}

.no-padding{
	padding: 0 !important;
}

.inlineBlock, .inline-block{display: inline-block !important;}

.relative{
	position: relative !important;
}

a.js{
	cursor: pointer;
}

// Clear Float

.cf:before, .cf:after, .clearfix:before, .clearfix:after {
	content: "";
	display: table;
}

.cf:after, .clearfix:after {
	clear: both;
}

/* Visibility */

.hide {
	display: none;
}
.show {
	display: block !important;
}
.invisible {
	visibility: hidden;
}
.text-hide {
	@include text-hide();
}

.invisible{
	height: 0;
	text-indent: -9999999px;
	margin: 0;
	padding: 0;
}

.hidden {
	display: none !important;
	visibility: hidden;
}


// Colors

.white{color:white !important;}

.whiteBG{background: white !important;}

.blue{color: $brand-primary !important;}

.blueBG{
	background: $brand-primary !important;
	color: white;

	a{color: white;}
}

.black{color:black !important;}

.blackBG{color:white !important; background-color:black !important;}

.lightBG{background: #f6f6f6 !important;}

.gray{color: $gray;}

.grayBG{background: $gray-light !important;}

.grayLighterBG{background: $gray-lighter !important;}

.darkBG{
	background: $gray-darker !important;
	color: white;

	a{color: white;text-decoration: underline;}
}

.dark{color: $gray-darker;}


// Content Padding

.content-wrapper {
	padding: 0 4rem;
}

.module-lg{
	margin-bottom: 80px !important;

	@media (max-width: $screen-xs-min) {
		margin-bottom: 50px !important;
	}
}

.module{
	margin-bottom: 40px !important;

	@media (max-width: $screen-xs-min) {
		margin-bottom: 30px !important;
	}
}

.moduleTight, .module-sm{
	margin-bottom: 20px !important;
	@media (max-width: $screen-xs-min) {
		margin-bottom: 15px !important;
	}
}

.moduleTighter, .module-xs{
	margin-bottom: 10px !important;
}

.table{
	display: table;

	> div{
		display: table-cell;
	}
}

// Button style

.m-button {

	border: 0;
	color: #fff;
	padding: .2rem 1.2rem;

	&-primary {

		background: $brand-primary;
		transition: .4s background;

		&:hover {
			color: white;
			background: lighten($brand-primary, 10%);
		}
	}

	&-nostyle {

		background: none;
		border: 0;
		font-size: 16px;
	}
}


// Mixin for Play button === if Video

.m-button-load {
	background: #f5f5f5;
	border: 1px solid #ebebeb;
	color: #b2b2b2;
	font-weight: bold;
	padding: 1rem;
	width: 90%;
	max-width: 920px;
	margin: 0 auto;
	display: block;
	outline: none;
}

.post-share {
	i {
		-webkit-transform: translateY(70px);
		-webkit-animation: come-in 0.4s ease forwards;
		-moz-transform: translateY(70px);
		-moz-animation: come-in 0.4s ease forwards;
	}

	.fa-twitter {
		-webkit-animation-duration: 0.5s;
		-moz-animation-duration: 0.5s;
	}

	.fa-stumbleupon {
		-webkit-animation-duration: .6s;
		-moz-animation-duration: .6s;
	}

	.fa-google-plus {
		-webkit-animation-duration: .7s;
		-moz-animation-duration: .7s;
	}
}


// Grid Creation

@mixin col($col, $max-cols: 12) {

	width: (100%/$max-cols)*$col;
}


// Font Sizing

@mixin font-size ($sizeValue: 1.8) {

	font-size: ($sizeValue * 10) +px;
	font-size: $sizeValue + rem;
}


// Breakpoints for Responsive Design

@mixin break($point) {

	@if $point == desktop-large {

		@media screen and (min-width: 1280px) {

			@content;
		}
	}

	@else if $point == desktop {

		@media screen and (min-width: 1025px) and (max-width: 1279px) {

			@content;
		}
	}

	@else if $point == tablet {

		@media screen and (min-width:767px) and (max-width: 1024px) {

			@content;
		}
	}

	@else if $point == tab-landscape {

		@media screen and (max-width:1024px) and (min-width:767px) and (orientation:landscape) {

			@content;
		}
	}

	@else if $point == phone {

		@media screen and (min-width:320px) and (max-width:767px)  {

			@content;
		}
	}

	@else if $point == phone-landscape {

		@media screen and (min-width:320px) and (max-width:767px) and (orientation:landscape) {

			@content;
		}
	}
}